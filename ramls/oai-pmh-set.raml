#%RAML 1.0
title: OAI-PMH API
baseUri: https://github.com/folio-org/mod-oai-pmh
version: v3
protocols: [ HTTP, HTTPS ]

documentation:
  - title: Set API
    content: |
      API for managing sets and filtering conditions that is used as part of metadata harvesting protocol implementation

types:
  filteringCondition: !include schemas/dto/filteringCondition.json
  filteringConditionCollection: !include schemas/dto/filteringConditionCollection.json
  filteringConditionValueCollection: !include schemas/dto/filteringConditionValueCollection.json
  set: !include schemas/dto/set.json
  setCollection: !include schemas/dto/setCollection.json
  errors: !include raml-util/schemas/errors.schema

traits:
  validate: !include raml-util/traits/validation.raml
  language: !include raml-util/traits/language.raml

resourceTypes:
  collection-item: !include raml-util/rtypes/item-collection.raml

/oai-pmh:
  /sets:
    displayName: Sets
    description: CRUD API for managing set items
    post:
      description: Creates the set item
      body:
        application/json:
          type: set
          example:
            strict: false
            value: !include examples/set_entry.sample
      responses:
        201:
          description: "Returns a newly created set item, with server-controlled fields like 'id' populated"
          body:
            application/json:
              type: set
        400:
          description: "Returns a newly created set item, with server-controlled fields like 'id' populated"
          body:
            text/plain:
              example: "Set item with specified id already exists"
    /{id}:
      displayName: Set
      description: Get, Delete or Update a specific set item
      type:
        collection-item:
          schema: set
          exampleItem: !include examples/set_entry.sample
      put:
        is: [validate]
  /filtering-conditions:
    displayName: Filtering conditions
    description: "Retrieve values for next filtering condition types: location, illpolicy, material-type, resource-type, instance-formats."
    get:
      responses:
        200:
          body:
            application/json:
              type: filteringConditionValueCollection
              example:
                strict: false
                value: !include examples/filtering_condition_value_collection.sample
        401:
          description: "Not authorized to perform requested action"
          body:
            text/plain:
              example: "Unable to get filtering condition values. Unauthorized"
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"

